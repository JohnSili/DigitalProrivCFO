import pandas as pd
import numpy as np
from matplotlib import pyplot as plt
from sklearn.metrics import mean_squared_error
from sklearn.model_selection import train_test_split
from sklearn.preprocessing import StandardScaler
df = pd.read_csv("train.csv")
df['t'] = df['t'].fillna(0)
y = df[["x1"]]
x = df[["ego_id", "u", "v", "t", "x2", "x3"]]
data = np.array(x)
# Вычисляем среднее значение и стандартное отклонение для каждого признака
mean = np.mean(data, axis=0)
std = np.std(data, axis=0)
# Стандартизируем данные
x = (data - mean) / std
x_train, x_test, y_train, y_test = train_test_split(x,y,test_size=0.2,random_state=42)
counts = df['ego_id'].value_counts()
step_d = counts.sort_index()
step_d = step_d.tolist()
from keras.models import Sequential
from keras.layers import LSTM, Dense
# создание модели
model = Sequential()
# добавление LSTM слоя
model.add(LSTM(units=64, input_shape=(3, 1)))
# добавление выходного слоя
model.add(Dense(units=4, activation='sigmoid'))
# компиляция модели
model.compile(optimizer='adam', loss='mean_squared_error', metrics=['accuracy'])
model.fit(normalized_data, y_train, batch_size=1019, epochs=10)
